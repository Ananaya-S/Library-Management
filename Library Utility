import java.util.*;
import java.util.*;
import java.util.*;

class BookUtility {
    private List<Book> books = new ArrayList<>();
    private Set<Integer> users = new HashSet<>();
    private Map<Integer, Integer> issuedBooks = new HashMap<>();
    private Queue<Integer> bookRequests = new LinkedList<>();

    // Add a new book
    public void addBook(int id, String title, String author) {
        books.add(new Book(id, title, author));
        System.out.println("Book added successfully!");
    }

    // Register a new user
    public void registerUser(int userId) {
        if (users.add(userId)) {
            System.out.println("User registered successfully!");
        } else {
            System.out.println("User ID already exists!");
        }
    }

    // Display all books
    public void displayBooks() {
        if (books.isEmpty()) {
            System.out.println("No books available.");
            return;
        }
        for (Book book : books) {
            System.out.println("ID: " + book.getBookId() + ", Title: " + book.getTitle() + ", Author: " + book.getAuthor() + ", Issued: " + book.isIssued());
        }
    }

    // Issue a book
    public void issueBook(int bookId, int userId) {
        if (!users.contains(userId)) {
            System.out.println("User not registered.");
            return;
        }
        for (Book book : books) {
            if (book.getBookId() == bookId) {
                if (book.isIssued()) {
                    System.out.println("Book is already issued!");
                } else {
                    book.setIssued(true);
                    issuedBooks.put(bookId, userId);
                    System.out.println("Book issued to user " + userId);
                }
                return;
            }
        }
        System.out.println("Book not found!");
    }

    // Return a book
    public void returnBook(int bookId) {
        if (issuedBooks.containsKey(bookId)) {
            issuedBooks.remove(bookId);
            for (Book book : books) {
                if (book.getBookId() == bookId) {
                    book.setIssued(false);
                    break;
                }
            }
            System.out.println("Book returned successfully!");
        } else {
            System.out.println("This book was not issued!");
        }
    }

    // Request a book
    public void requestBook(int bookId, String author) {
        boolean found = false;
        for (Book book : books) {
            if (book.getBookId() == bookId && book.getAuthor().equalsIgnoreCase(author)) {
                bookRequests.add(bookId);
                System.out.println("Book request placed for ID " + bookId + " by Author " + author);
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Book with given ID and Author not found!");
        }
    }

    // Process book requests
    public void processRequests() {
        if (bookRequests.isEmpty()) {
            System.out.println("No pending requests.");
            return;
        }
        while (!bookRequests.isEmpty()) {
            int bookId = bookRequests.poll();
            System.out.println("Processing request for Book ID: " + bookId);
        }
    }
}

